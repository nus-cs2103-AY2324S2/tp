@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":ImportCommandParser" as ImportCommandParser LOGIC_COLOR
participant ":ArgumentTokenizer" as ArgumentTokenizer LOGIC_COLOR
participant "multi:ArgumentMultimap" as ArgumentMultimap LOGIC_COLOR
participant ":ParserUtil" as ParserUtil LOGIC_COLOR
participant "i:ImportCommand" as ImportCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
participant "a:AddCommandParser" as AddCommandParser LOGIC_COLOR
participant "a:AddCommand" as AddCommand LOGIC_COLOR
end box



box Model MODEL_COLOR_T1
participant "p:Person" as Person MODEL_COLOR
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute(...)
activate LogicManager

LogicManager -> AddressBookParser : parseCommand(...)
activate AddressBookParser

create ImportCommandParser
AddressBookParser -> ImportCommandParser
activate ImportCommandParser

ImportCommandParser --> AddressBookParser
deactivate ImportCommandParser

AddressBookParser -> ImportCommandParser : parse(...)
activate ImportCommandParser

'Tokenizer and ParserUtil dont have constructors, how?

ImportCommandParser -> ArgumentTokenizer : tokenize(...)
activate ArgumentTokenizer

create ArgumentMultimap
ArgumentTokenizer -> ArgumentMultimap
activate ArgumentMultimap
ArgumentMultimap --> ArgumentTokenizer

deactivate ArgumentMultimap

ArgumentTokenizer --> ImportCommandParser
deactivate ArgumentTokenizer

ImportCommandParser -> ImportCommandParser : isPrefixPresent(...)
activate ImportCommandParser
ImportCommandParser --> ImportCommandParser
deactivate ImportCommandParser

ImportCommandParser -> ArgumentMultimap : getPreamble()
activate ArgumentMultimap
ArgumentMultimap --> ImportCommandParser
deactivate ArgumentMultimap

ImportCommandParser -> ParserUtil : parseFilePath(...)
activate ParserUtil
ParserUtil --> ImportCommandParser : filePath
deactivate ParserUtil

create ImportCommand
ImportCommandParser -> ImportCommand : ImportCommand(filePath)
activate ImportCommand

create AddCommandParser
ImportCommand -> AddCommandParser
activate AddCommandParser
AddCommandParser -> ImportCommand
deactivate AddCommandParser


ImportCommand --> ImportCommandParser
deactivate ImportCommand

ImportCommandParser --> AddressBookParser : i
deactivate ImportCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
ImportCommandParser -[hidden]-> AddressBookParser
destroy ImportCommandParser

AddressBookParser --> LogicManager : i
deactivate AddressBookParser

LogicManager -> ImportCommand : execute(m)
activate ImportCommand

ImportCommand -> ImportCommand : readCsvfile()
activate ImportCommand
ImportCommand --> ImportCommand : personsData
deactivate ImportCommand

loop personData in personsData

ImportCommand -> ImportCommand : convertToAddCommandInput(personData)
activate ImportCommand
ImportCommand --> ImportCommand : addCommandInput
deactivate ImportCommand

ImportCommand -> AddCommandParser : parseAddCommandInput(addCommandInput)
activate AddCommandParser
create AddCommand
AddCommandParser --> AddCommand : parse(addCommandInput)
deactivate AddCommandParser
activate AddCommand
AddCommand --> ImportCommand
deactivate AddCommand

ImportCommand -> AddCommand
activate AddCommand
ref over AddCommand, Person, Model : addCommand.execute(m)
AddCommand --> ImportCommand
deactivate AddCommand

end

destroy AddCommand
destroy AddCommandParser


create CommandResult
ImportCommand -> CommandResult
activate CommandResult

CommandResult --> ImportCommand
deactivate CommandResult

ImportCommand --> LogicManager : r
deactivate ImportCommand
ImportCommand -[hidden]-> LogicManager
destroy ImportCommand

[<--LogicManager
deactivate LogicManager
@enduml
