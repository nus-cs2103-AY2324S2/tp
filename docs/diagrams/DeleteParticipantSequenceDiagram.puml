@startuml
!include style.puml
skinparam ArrowFontStyle plain

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":AddressBookParser" as AddressBookParser LOGIC_COLOR
participant ":DeletePersonCommandParser" as DeletePersonCommandParser LOGIC_COLOR
participant "d:DeletePersonCommand" as DeletePersonCommand LOGIC_COLOR
participant "r:CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant "m:Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("delp 1")
activate LogicManager

LogicManager -> AddressBookParser : parseCommand("delp 1")
activate AddressBookParser

create DeletePersonCommandParser
AddressBookParser -> DeletePersonCommandParser
activate DeletePersonCommandParser

DeletePersonCommandParser --> AddressBookParser
deactivate DeletePersonCommandParser

AddressBookParser -> DeletePersonCommandParser : parse("1")
activate DeletePersonCommandParser

create DeletePersonCommand
DeletePersonCommandParser -> DeletePersonCommand
activate DeletePersonCommand

DeletePersonCommand --> DeletePersonCommandParser :
deactivate DeletePersonCommand

DeletePersonCommandParser --> AddressBookParser : d
deactivate DeletePersonCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DeletePersonCommandParser -[hidden]-> AddressBookParser
destroy DeletePersonCommandParser

AddressBookParser --> LogicManager : d
deactivate AddressBookParser

LogicManager -> DeletePersonCommand : execute(m)
activate DeletePersonCommand

DeletePersonCommand -> Model : isAnEventSelected()
activate Model
Model --> DeletePersonCommand
deactivate Model

alt isAnEventSelected
    DeletePersonCommand -> DeletePersonCommand : deleteFromEvent()
    activate DeletePersonCommand

    DeletePersonCommand -> Model : deletePersonFromSelectedEvent(personToDelete)
    activate Model
    Model --> DeletePersonCommand
    deactivate Model

    deactivate DeletePersonCommand
else
    DeletePersonCommand -> DeletePersonCommand : deleteFromGlobal()
    activate DeletePersonCommand

    DeletePersonCommand -> Model : deletePerson(personToDelete)
    activate Model
    Model --> DeletePersonCommand
    deactivate Model

    deactivate DeletePersonCommand
end

create CommandResult
DeletePersonCommand -> CommandResult
activate CommandResult

CommandResult --> DeletePersonCommand
deactivate CommandResult

DeletePersonCommand --> LogicManager : r
deactivate DeletePersonCommand

[<--LogicManager
deactivate LogicManager
@enduml
